---
description: SCSS フロントエンド開発ルール（タイポグラフィ・カラー・スタイリング）
globs: ["src/**/*.{scss,css}"]
alwaysApply: true
---

# SCSS フロントエンド開発ルール

このプロジェクト固有のSCSSスタイリングルールです。メインルールに加えて、以下のルールに従ってスタイリングを行ってください。

## プロジェクト構造

### ディレクトリ構成
- `src/styles/`: グローバルスタイルとアニメーション
- `src/components/`: コンポーネント固有のスタイル
- `src/pages/`: ページ固有のスタイル

### ファイル命名規則
- スタイルファイル: `PascalCase.scss` (例: `Header.scss`)
- グローバルスタイル: `kebab-case.scss` (例: `variables.scss`, `typography.scss`)

## SCSS/CSS

### クラス命名規則
- BEM記法を使用: `.block__element--modifier`
- コンポーネント名をプレフィックスとして使用
- ケバブケースで命名

### SCSS構造
```scss
.component-name {
  // 基本スタイル
  
  &__element {
    // 要素スタイル
  }
  
  &--modifier {
    // 修飾子スタイル
  }
  
  &:hover {
    // ホバー状態
  }
  
  @media (max-width: 768px) {
    // レスポンシブスタイル
  }
}
```

### タイポグラフィ

#### フォント設定
```scss
// Google Fonts のインポート
@import url('https://fonts.googleapis.com/css2?family=Noto+Sans+JP:wght@400;700&family=Quicksand:wght@700&display=swap');

// フォント変数
$font-noto-sans-jp: 'Noto Sans JP', sans-serif;
$font-quicksand: 'Quicksand', sans-serif;

// カラーパレット
// プライマリー・アクセントカラー
$primary-color: #B1D91C;
$accent-color: #B1D91C;

// ボタンカラー
$button-color: #9EC317;

// テキストカラー
$text-color-primary: #333;
$text-color-white: #fff;

// 背景カラー
$background-dark: #9EC317;
$background-gradient-start: #F5FDDA;
$background-gradient-end: #E1F1F0;
```

#### テキストスタイル定義
```scss
// 日本語通常テキスト
.text-regular {
  font-family: $font-noto-sans-jp;
  font-weight: 400;
  font-size: 16px;
  line-height: 28px;
  letter-spacing: 0.1em;
  color: $text-color-primary;
}

// 日本語太字テキスト
.text-bold {
  font-family: $font-noto-sans-jp;
  font-weight: 700;
  font-size: 18px;
  line-height: 28px;
  letter-spacing: 0.1em;
  color: $text-color-primary;
}

// 見出し英語テキスト
.heading-english {
  font-family: $font-quicksand;
  font-weight: 700;
  font-size: 48px;
  line-height: auto;
  letter-spacing: 0.2em;
  color: $accent-color;
}

// 背景色が濃い場合のテキスト
.text-on-dark {
  color: $text-color-white;
  
  &.heading-english {
    color: $text-color-white;
  }
}

// ホバー時の色変更
.interactive-text {
  transition: color 0.3s ease;
  
  &:hover {
    color: $accent-color;
  }
}
```

#### レスポンシブタイポグラフィ
```scss
// モバイル対応
@media (max-width: 768px) {
  .text-regular {
    font-size: 14px;
    line-height: 24px;
  }
  
  .text-bold {
    font-size: 16px;
    line-height: 24px;
  }
  
  .heading-english {
    font-size: 32px;
  }
}

// タブレット対応
@media (min-width: 769px) and (max-width: 1024px) {
  .heading-english {
    font-size: 40px;
  }
}
```

### 変数とミックスイン
```scss
// カラーパレット
// プライマリー・アクセントカラー
$primary-color: #B1D91C;
$accent-color: #B1D91C;

// ボタンカラー
$button-color: #9EC317;

// テキストカラー
$text-color-primary: #333;
$text-color-white: #fff;

// 背景カラー
$background-dark: #9EC317;
$background-gradient-start: #F5FDDA;
$background-gradient-end: #E1F1F0;

// フォント変数
$font-noto-sans-jp: 'Noto Sans JP', sans-serif;
$font-quicksand: 'Quicksand', sans-serif;

// ブレークポイント変数
$breakpoint-mobile: 768px;
$breakpoint-tablet: 1024px;

// スペーシング変数
$spacing-xs: 4px;
$spacing-sm: 8px;
$spacing-md: 16px;
$spacing-lg: 24px;
$spacing-xl: 32px;

// セクション余白変数（柔らかく親しみやすい高さ）
$section-title-top-margin: 48px;      // セクションタイトルの上部余白
$section-title-bottom-margin: 32px;   // セクションタイトルの下部余白
$section-button-top-margin: 40px;     // セクションボタンの上部余白
$section-button-bottom-margin: 48px;  // セクションボタンの下部余白
$section-content-padding: 40px;       // セクションコンテンツのパディング

// レスポンシブ余白変数（モバイル対応）
$section-title-top-margin-mobile: 32px;      // モバイル：セクションタイトルの上部余白
$section-title-bottom-margin-mobile: 24px;   // モバイル：セクションタイトルの下部余白
$section-button-top-margin-mobile: 24px;     // モバイル：セクションボタンの上部余白
$section-button-bottom-margin-mobile: 32px;  // モバイル：セクションボタンの下部余白
$section-content-padding-mobile: 24px;       // モバイル：セクションコンテンツのパディング

// コンテナとページ全体の余白変数
$page-padding: 20px;                        // ページ全体のパディング
$page-padding-mobile: 15px;                 // モバイル：ページ全体のパディング
$container-padding: 20px;                   // コンテナの内部パディング
$container-padding-mobile: 15px;             // モバイル：コンテナの内部パディング
$section-margin: 80px;                       // セクション間のマージン
$section-margin-mobile: 64px;                // モバイル：セクション間のマージン

// カードとコンテンツブロックの余白変数
$card-padding: 32px;                        // カードの内部パディング
$card-padding-mobile: 24px;                 // モバイル：カードの内部パディング
$card-margin: 24px;                         // カード間のマージン
$card-margin-mobile: 16px;                  // モバイル：カード間のマージン
$content-block-padding: 24px;               // コンテンツブロックのパディング
$content-block-padding-mobile: 16px;        // モバイル：コンテンツブロックのパディング

// フォーム要素の余白変数
$form-element-margin: 16px;                 // フォーム要素間のマージン
$form-element-margin-mobile: 12px;          // モバイル：フォーム要素間のマージン
$form-label-margin: 8px;                    // ラベルと入力フィールドの間隔
$form-button-margin: 24px;                  // ボタンとフォームの間隔
$form-button-margin-mobile: 16px;           // モバイル：ボタンとフォームの間隔

// リストとグリッドアイテムの余白変数
$list-item-margin: 12px;                    // リストアイテム間のマージン
$list-item-margin-mobile: 8px;              // モバイル：リストアイテム間のマージン
$grid-gap: 24px;                            // グリッドアイテムのギャップ
$grid-gap-mobile: 16px;                     // モバイル：グリッドアイテムのギャップ
$nav-item-margin: 16px;                     // ナビゲーションアイテムの間隔
$nav-item-margin-mobile: 12px;              // モバイル：ナビゲーションアイテムの間隔

// ミックスイン定義
@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin text-ellipsis {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin responsive-font($mobile-size, $desktop-size) {
  font-size: $mobile-size;
  
  @media (min-width: $breakpoint-mobile) {
    font-size: $desktop-size;
  }
}

// セクションタイトル余白ミックスイン
@mixin section-title-spacing {
  margin-top: $section-title-top-margin-mobile;
  margin-bottom: $section-title-bottom-margin-mobile;
  
  @media (min-width: $breakpoint-mobile) {
    margin-top: $section-title-top-margin;
    margin-bottom: $section-title-bottom-margin;
  }
}

// セクションボタン余白ミックスイン
@mixin section-button-spacing {
  margin-top: $section-button-top-margin-mobile;
  margin-bottom: $section-button-bottom-margin-mobile;
  
  @media (min-width: $breakpoint-mobile) {
    margin-top: $section-button-top-margin;
    margin-bottom: $section-button-bottom-margin;
  }
}

// セクションコンテンツパディングミックスイン
@mixin section-content-padding {
  padding: $section-content-padding-mobile;
  
  @media (min-width: $breakpoint-mobile) {
    padding: $section-content-padding;
  }
}

// ページ全体パディングミックスイン
@mixin page-padding {
  padding: $page-padding-mobile;
  
  @media (min-width: $breakpoint-mobile) {
    padding: $page-padding;
  }
}

// コンテナパディングミックスイン
@mixin container-padding {
  padding: $container-padding-mobile;
  
  @media (min-width: $breakpoint-mobile) {
    padding: $container-padding;
  }
}

// セクション間マージンミックスイン
@mixin section-margin {
  margin: $section-margin-mobile 0;
  
  @media (min-width: $breakpoint-mobile) {
    margin: $section-margin 0;
  }
}

// カードパディングミックスイン
@mixin card-padding {
  padding: $card-padding-mobile;
  
  @media (min-width: $breakpoint-mobile) {
    padding: $card-padding;
  }
}

// カードマージンミックスイン
@mixin card-margin {
  margin: $card-margin-mobile;
  
  @media (min-width: $breakpoint-mobile) {
    margin: $card-margin;
  }
}

// コンテンツブロックパディングミックスイン
@mixin content-block-padding {
  padding: $content-block-padding-mobile;
  
  @media (min-width: $breakpoint-mobile) {
    padding: $content-block-padding;
  }
}

// フォーム要素マージンミックスイン
@mixin form-element-margin {
  margin-bottom: $form-element-margin-mobile;
  
  @media (min-width: $breakpoint-mobile) {
    margin-bottom: $form-element-margin;
  }
}

// フォームラベルマージンミックスイン
@mixin form-label-margin {
  margin-bottom: $form-label-margin;
}

// フォームボタンマージンミックスイン
@mixin form-button-margin {
  margin-top: $form-button-margin-mobile;
  
  @media (min-width: $breakpoint-mobile) {
    margin-top: $form-button-margin;
  }
}

// リストアイテムマージンミックスイン
@mixin list-item-margin {
  margin-bottom: $list-item-margin-mobile;
  
  @media (min-width: $breakpoint-mobile) {
    margin-bottom: $list-item-margin;
  }
}

// グリッドギャップミックスイン
@mixin grid-gap {
  gap: $grid-gap-mobile;
  
  @media (min-width: $breakpoint-mobile) {
    gap: $grid-gap;
  }
}

// ナビゲーションアイテムマージンミックスイン
@mixin nav-item-margin {
  margin: $nav-item-margin-mobile;
  
  @media (min-width: $breakpoint-mobile) {
    margin: $nav-item-margin;
  }
}

// 使用例
.component {
  color: $accent-color;
  @include flex-center;
  
  &__text {
    @include text-ellipsis;
    @include responsive-font(14px, 16px);
    color: $text-color-primary;
  }
  
  &__button {
    background-color: $button-color;
    color: $text-color-white;
    
    &:hover {
      background-color: $primary-color;
    }
  }
}

// セクション余白使用例
.section {
  @include section-content-padding;
  @include section-margin;
  
  &__title {
    @include section-title-spacing;
    @extend .heading-english;
  }
  
  &__button {
    @include section-button-spacing;
    background-color: $button-color;
    color: $text-color-white;
    
    &:hover {
      background-color: $primary-color;
    }
  }
}

// ページ全体の余白使用例
.page {
  @include page-padding;
  
  .container {
    @include container-padding;
    max-width: 1200px;
    margin: 0 auto;
  }
}

// カードとコンテンツブロックの余白使用例
.card {
  @include card-padding;
  @include card-margin;
  @include card-shadow;
  
  &__content {
    @include content-block-padding;
  }
}

// フォーム要素の余白使用例
.form {
  .form-group {
    @include form-element-margin;
    
    .form-label {
      @include form-label-margin;
    }
  }
  
  .form-button {
    @include form-button-margin;
    @include button-primary;
  }
}

// リストとグリッドの余白使用例
.list {
  .list-item {
    @include list-item-margin;
  }
}

.grid {
  @include grid-gap;
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
}

// ナビゲーションの余白使用例
.navigation {
  .nav-item {
    @include nav-item-margin;
  }
}
```

### カラーデザインシステム

#### カラーパレット使用ガイドライン
```scss
// プライマリー・アクセントカラー（#B1D91C）
// - メインのブランドカラー
// - 見出しや重要な要素に使用
// - ホバー効果やアクティブ状態に使用

// ボタンカラー（#9EC317）
// - ボタンの背景色として使用
// - プライマリーカラーより少し濃い色でコントラストを確保

// テキストカラー（#333）
// - メインのテキストカラー
// - 読みやすさを重視したダークグレー

// 濃い背景色（#9EC317）
// - セクションの背景色として使用
// - この背景上では必ず白いテキスト（#fff）を使用

// 薄いグラデーション背景（#F5FDDA → #E1F1F0）
// - ヒーローセクションや装飾的な背景に使用
// - 左上から右下への斜めグラデーション
```

#### カラー使用例
```scss
// ボタンスタイル
.button-primary {
  background-color: $button-color;
  color: $text-color-white;
  border: none;
  
  &:hover {
    background-color: $primary-color;
  }
}

// 濃い背景のセクション
.section-dark {
  background-color: $background-dark;
  color: $text-color-white;
  
  .heading-english {
    color: $text-color-white;
  }
}

// グラデーション背景
.hero-section {
  background: linear-gradient(135deg, $background-gradient-start 0%, $background-gradient-end 100%);
  color: $text-color-primary;
}

// アクセントテキスト
.accent-text {
  color: $accent-color;
  
  &:hover {
    color: $button-color;
  }
}
```

#### カラーアクセシビリティ
- 濃い背景色（#9EC317）上では必ず白いテキスト（#fff）を使用
- コントラスト比は WCAG AA 基準（4.5:1以上）を満たす
- カラーのみで情報を伝えない（アイコンやテキストと組み合わせる）

### セクション余白システム

#### 余白設計原則
- **柔らかく親しみやすい高さ**: ユーザーが快適に感じる適度な余白を設定
- **視覚的階層**: タイトル、コンテンツ、ボタンの間隔で情報の重要度を表現
- **統一性**: 全てのセクションで同じ余白ルールを適用し、一貫性を保つ
- **レスポンシブ対応**: デバイスサイズに応じて適切な余白を調整

#### 余白変数使用ガイドライン
```scss
// セクションタイトル
.section-title {
  @include section-title-spacing;  // 上部48px、下部32px（デスクトップ）
  // モバイルでは上部32px、下部24px
}

// セクションボタン
.section-button {
  @include section-button-spacing;  // 上部40px、下部48px（デスクトップ）
  // モバイルでは上部24px、下部32px
}

// セクションコンテンツ
.section-content {
  @include section-content-padding;  // 40px（デスクトップ）
  // モバイルでは24px
}
```

#### 余白適用ルール
- **必須適用**: 全てのセクションタイトルに `@include section-title-spacing` を適用
- **必須適用**: 全てのセクションボタンに `@include section-button-spacing` を適用
- **必須適用**: 全てのセクションコンテンツに `@include section-content-padding` を適用
- **必須適用**: 全てのページに `@include page-padding` を適用
- **必須適用**: 全てのコンテナに `@include container-padding` を適用
- **必須適用**: 全てのカードに `@include card-padding` を適用
- **必須適用**: 全てのフォーム要素に `@include form-element-margin` を適用
- **必須適用**: 全てのリストアイテムに `@include list-item-margin` を適用
- **必須適用**: 全てのグリッドに `@include grid-gap` を適用
- **カスタマイズ禁止**: 個別の余白値を直接指定せず、必ず変数またはミックスインを使用
- **一貫性維持**: 同じ役割の要素は必ず同じ余白設定を使用

#### 余白システムの階層
1. **ページレベル**: `@include page-padding` - ページ全体の余白
2. **セクションレベル**: `@include section-margin` - セクション間の余白
3. **コンテナレベル**: `@include container-padding` - コンテナの内部余白
4. **コンテンツレベル**: `@include section-content-padding` - セクションコンテンツの余白
5. **要素レベル**: 各要素固有の余白ミックスインを使用

### レスポンシブデザイン
- モバイルファーストで設計
- ブレークポイントを統一（$breakpoint-mobile: 768px, $breakpoint-tablet: 1024px）
- フレックスボックスとグリッドを適切に使用
- タイポグラフィもレスポンシブ対応
- セクション余白もレスポンシブ対応

#### レスポンシブ実装例
```scss
.responsive-component {
  padding: $spacing-md;
  
  @media (min-width: $breakpoint-mobile) {
    padding: $spacing-lg;
  }
  
  @media (min-width: $breakpoint-tablet) {
    padding: $spacing-xl;
  }
}

// セクション余白のレスポンシブ実装例
.responsive-section {
  @include section-content-padding;
  @include section-margin;
  
  &__title {
    @include section-title-spacing;
    @extend .heading-english;
  }
  
  &__button {
    @include section-button-spacing;
    background-color: $button-color;
    color: $text-color-white;
  }
}

// カードのレスポンシブ実装例
.responsive-card {
  @include card-padding;
  @include card-margin;
  
  &__content {
    @include content-block-padding;
  }
}

// フォームのレスポンシブ実装例
.responsive-form {
  .form-group {
    @include form-element-margin;
    
    .form-label {
      @include form-label-margin;
    }
  }
  
  .form-button {
    @include form-button-margin;
    @include button-primary;
  }
}
```

### ボタンレイアウトシステム

#### ボタンの配置ルール
- **デフォルト配置**: 全てのボタンは中央揃えで配置される
- **単一ボタン**: `margin: 0 auto` と `display: block` で中央揃え
- **ボタングループ**: `justify-content: center` でデフォルト中央揃え
- **配置オプション**: 必要に応じて以下のクラスで配置を変更可能

#### ボタン配置クラス
```scss
// 単一ボタンの配置
.button {
  margin: 0 auto;        // 中央揃え（デフォルト）
  display: block;
}

// ボタングループの配置
.button-group {
  justify-content: center;  // 中央揃え（デフォルト）
  
  &.button-group--start {
    justify-content: flex-start;  // 左揃え
  }
  
  &.button-group--end {
    justify-content: flex-end;    // 右揃え
  }
  
  &.button-group--between {
    justify-content: space-between;  // 両端揃え
  }
  
  &.button-group--around {
    justify-content: space-around;   // 均等配置
  }
}
```

#### ボタン配置使用例
```scss
// 中央揃えボタン（デフォルト）
.section {
  .button {
    // 自動的に中央揃えされる
  }
}

// 左揃えボタン
.section {
  .button-group--start {
    justify-content: flex-start;
  }
}

// 右揃えボタン
.section {
  .button-group--end {
    justify-content: flex-end;
  }
}

// 両端揃えボタン
.section {
  .button-group--between {
    justify-content: space-between;
  }
}
```

#### ボタン配置適用ルール
- **必須適用**: 全てのボタンは中央揃えをデフォルトとする
- **配置変更**: 特別な理由がある場合のみ配置クラスを使用
- **一貫性維持**: 同じセクション内では統一された配置を使用
- **レスポンシブ対応**: モバイルでも適切な配置を維持
